{"version":3,"sources":["components/Button.jsx","components/Input.jsx","components/ClearButton.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","val","children","isNaN","onClick","handleClick","Input","input","ClearButton","handleClear","App","addToInput","setState","state","handleEqual","math","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAOaA,EAAS,SAAAC,GAClB,OACA,qBAAKC,UAAS,0BANCC,EAM+BF,EAAMG,SAL5CC,MAAMF,IAAgB,MAARA,GAAuB,MAARA,EAKkC,WAAP,OAC5DG,QAAS,kBAAML,EAAMM,YAAYN,EAAMG,WAD3C,SAGKH,EAAMG,WATI,IAAAD,GCANK,G,MAAQ,SAACP,GAClB,OACI,qBAAKC,UAAU,QAAf,SAAwBD,EAAMQ,UCFzBC,G,MAAc,SAACT,GACxB,OACI,qBAAKC,UAAU,YAAYI,QAASL,EAAMU,YAA1C,SACKV,EAAMG,a,QCiEJQ,E,kDA/Db,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IAQRY,WAAa,SAAAV,GACX,EAAKW,SACH,CACEL,MAAO,EAAKM,MAAMN,MAAQN,KAZb,EAiBnBa,YAAc,WACZ,EAAKF,SACH,CACEL,MAAOQ,IAAc,EAAKF,MAAMN,UAjBpC,EAAKM,MAAQ,CACVN,MAAO,IAJO,E,0CAyBnB,WAAU,IAAD,OACP,OACE,qBAAKP,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,CAAOO,MAAOS,KAAKH,MAAMN,QAC3B,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,kBAEF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQK,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAaW,KAAKL,WAA1B,eACA,cAAC,EAAD,CAAQN,YAAa,kBAAM,EAAKS,eAAhC,eACA,cAAC,EAAD,CAAQT,YAAaW,KAAKL,WAA1B,kBAEF,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CAAaS,YAAa,kBAAM,EAAKG,SAAS,CAACL,MAAO,MAAtD,8B,GAxDMU,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.895a7082.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst isOperator = val => {\r\n    return !isNaN(val) || val === '.' || val === \"=\";\r\n}\r\n\r\nexport const Button = props => {\r\n    return(\r\n    <div className={`button-wrapper ${ isOperator(props.children) ? null : \"operator\"}`\r\n      } onClick={() => props.handleClick(props.children)}\r\n    >\r\n        {props.children}\r\n    </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport \"./Input.css\";\r\n\r\nexport const Input = (props) => {\r\n    return (\r\n        <div className=\"input\">{props.input}</div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './ClearButton.css';\r\n\r\nexport const ClearButton = (props) => {\r\n    return (\r\n        <div className=\"clear-btn\" onClick={props.handleClear}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Button } from './components/Button';\nimport { Input } from \"./components/Input\";\nimport {ClearButton} from './components/ClearButton';\nimport * as math from 'mathjs'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       input: \"\"\n    }\n\n  }\n  \n  addToInput = val => {\n    this.setState(\n      {\n        input: this.state.input + val\n      }\n    )\n  }\n\n  handleEqual = () => {\n    this.setState(\n      {\n        input: math.evaluate(this.state.input)\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"calc-wrapper\">\n            <Input input={this.state.input}></Input>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={() => this.handleEqual()}>=</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={() => this.setState({input: \"\"})}>Clear</ClearButton>\n          </div>\n        </div>\n      </div>\n      );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}